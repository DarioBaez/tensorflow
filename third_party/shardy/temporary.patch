diff --git a/third_party/llvm/generated.patch b/third_party/llvm/generated.patch
index 08ffb90..509398d 100644
--- a/third_party/llvm/generated.patch
+++ b/third_party/llvm/generated.patch
@@ -1,12 +1 @@
 Auto generated patch. Do not edit or delete it, even if empty.
-diff -ruN --strip-trailing-cr a/utils/bazel/llvm-project-overlay/libc/test/UnitTest/BUILD.bazel b/utils/bazel/llvm-project-overlay/libc/test/UnitTest/BUILD.bazel
---- a/utils/bazel/llvm-project-overlay/libc/test/UnitTest/BUILD.bazel
-+++ b/utils/bazel/llvm-project-overlay/libc/test/UnitTest/BUILD.bazel
-@@ -80,6 +80,7 @@
-     ],
-     deps = [
-         ":LibcUnitTest",
-+        "//libc:__support_macros_config",
-         "//libc:errno",
-     ],
- )
diff --git a/third_party/llvm/workspace.bzl b/third_party/llvm/workspace.bzl
index cdc4b1a..ddff5d1 100644
--- a/third_party/llvm/workspace.bzl
+++ b/third_party/llvm/workspace.bzl
@@ -4,8 +4,8 @@ load("//third_party:repo.bzl", "tf_http_archive")
 
 def repo(name):
     """Imports LLVM."""
-    LLVM_COMMIT = "dd3addf954ac7e704fccc7d011217ba10461c883"
-    LLVM_SHA256 = "f2f7ef9a6eb597b8a53186878122269d673fca742470f3bdb5bac18a47e9b8be"
+    LLVM_COMMIT = "6c68cc4df1bfbb846e7724568a4cada61847c7f4"
+    LLVM_SHA256 = "421b0350b848f278801d2c139ddf9fa2552c59945c7ffcfde095d94f2e0a7aad"
 
     tf_http_archive(
         name = name,
diff --git a/third_party/stablehlo/temporary.patch b/third_party/stablehlo/temporary.patch
index 7972d38..2bd85ca 100755
--- a/third_party/stablehlo/temporary.patch
+++ b/third_party/stablehlo/temporary.patch
@@ -12,4 +12,25 @@ diff --ruN a/stablehlo/stablehlo/conversions/tosa/tests/unary.mlir b/stablehlo/s
    // CHECK: tosa.slice %arg0, %[[SIZE]], %[[START]]
    %0 = "stablehlo.slice"(%arg) {
      start_indices = array<i64: 2, 1>,
+diff --ruN a/stablehlo/stablehlo/tests/ops_stablehlo_quantized.mlir b/stablehlo/stablehlo/tests/ops_stablehlo_quantized.mlir
+--- stablehlo/stablehlo/tests/ops_stablehlo_quantized.mlir
++++ stablehlo/stablehlo/tests/ops_stablehlo_quantized.mlir
+@@ -1338,7 +1338,7 @@
+ 
+ // -----
+ 
+-// expected-error@+1 {{scale out of expressed type range}}
++// expected-error@+1 {{scale 1.055040e+05 out of expressed type range}}
+ func.func @quantized_element_type_c6(%arg0: tensor<1x2x!quant.uniform<i4:f16, 10.550400e+04>>) {
+    %0 = stablehlo.add %arg0,  %arg0 : tensor<1x2x!quant.uniform<i4:f16, 10.550400e+04>>
+    func.return
+@@ -1346,7 +1346,7 @@
+ 
+ // -----
+ 
+-// expected-error@+1 {{scale out of expressed type range}}
++// expected-error@+1 {{scale 4.960464e-08 out of expressed type range}}
+ func.func @quantized_element_type_c6(%arg0: tensor<1x2x!quant.uniform<i4:f16, 4.960464e-08>>) {
+    %0 = stablehlo.add %arg0,  %arg0 : tensor<1x2x!quant.uniform<i4:f16, 4.960464e-08>>
+    func.return
 
