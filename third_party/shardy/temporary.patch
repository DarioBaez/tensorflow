diff --git a/third_party/llvm/generated.patch b/third_party/llvm/generated.patch
index 9731bbe..509398d 100644
--- a/third_party/llvm/generated.patch
+++ b/third_party/llvm/generated.patch
@@ -1,47 +1 @@
 Auto generated patch. Do not edit or delete it, even if empty.
-diff -ruN --strip-trailing-cr a/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp b/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp
---- a/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp
-+++ b/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp
-@@ -15964,6 +15964,15 @@
- 
-     if (TLI.isLoadBitCastBeneficial(N0.getValueType(), VT, DAG,
-                                     *LN0->getMemOperand())) {
-+      // If the range metadata type does not match the new memory
-+      // operation type, remove the range metadata.
-+      if (const MDNode *MD = LN0->getRanges()) {
-+        ConstantInt *Lower = mdconst::extract<ConstantInt>(MD->getOperand(0));
-+        if (Lower->getBitWidth() != VT.getScalarSizeInBits() ||
-+            !VT.isInteger()) {
-+          LN0->getMemOperand()->clearRanges();
-+        }
-+      }
-       SDValue Load =
-           DAG.getLoad(VT, SDLoc(N), LN0->getChain(), LN0->getBasePtr(),
-                       LN0->getMemOperand());
-diff -ruN --strip-trailing-cr a/llvm/test/CodeGen/X86/fold_bitcast_md_range.ll b/llvm/test/CodeGen/X86/fold_bitcast_md_range.ll
---- a/llvm/test/CodeGen/X86/fold_bitcast_md_range.ll
-+++ b/llvm/test/CodeGen/X86/fold_bitcast_md_range.ll
-@@ -0,0 +1,23 @@
-+; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
-+; RUN: llc -mtriple=x86_64-apple-macosx10.12.0 < %s | FileCheck %s
-+
-+; Ensure that when a bitcast is folded into a load, range metadata is invalidated
-+; if it does not match the new type.
-+
-+define i1 @fold_bitcast_range_metadata(ptr %valptr) {
-+; CHECK-LABEL: fold_bitcast_range_metadata:
-+; CHECK:       ## %bb.0: ## %start
-+; CHECK-NEXT:    movdqa (%rdi), %xmm0
-+; CHECK-NEXT:    pcmpeqb {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm0
-+; CHECK-NEXT:    pmovmskb %xmm0, %eax
-+; CHECK-NEXT:    cmpl $65535, %eax ## imm = 0xFFFF
-+; CHECK-NEXT:    sete %al
-+; CHECK-NEXT:    retq
-+start:
-+  %val = load i128, ptr %valptr, align 16, !range !0, !noundef !1
-+  %bool = icmp eq i128 %val, 1
-+  ret i1 %bool
-+}
-+
-+!0 = !{i128 0, i128 3}
-+!1 = !{}
diff --git a/third_party/llvm/workspace.bzl b/third_party/llvm/workspace.bzl
index 7346ba5..5ceac99 100644
--- a/third_party/llvm/workspace.bzl
+++ b/third_party/llvm/workspace.bzl
@@ -4,8 +4,8 @@ load("//third_party:repo.bzl", "tf_http_archive")
 
 def repo(name):
     """Imports LLVM."""
-    LLVM_COMMIT = "64046e9d2628ce421682eea8465e41554b46c96d"
-    LLVM_SHA256 = "8720a7b2c0af291de7758e321f2f767055272b4c0369f7449522366d7e351424"
+    LLVM_COMMIT = "5eccd71ce4f852c7b2f06ecd1976d9e34040fcaa"
+    LLVM_SHA256 = "fd100fd69425ebac40ed58ff0558e0064b74bd97b6023d5e65e4c706c726a483"
 
     tf_http_archive(
         name = name,
